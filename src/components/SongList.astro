---
import type { CollectionEntry } from "astro:content";
import { analyzeSong, type SongAnalysis } from "../chords/analysis";
import { parseChords } from "../chords/chords";

const props = Astro.props;

function getSongStats(song: CollectionEntry<"songs_ru">): SongAnalysis {
  const analysis = analyzeSong(parseChords({ text: song.body }), song.data.key);
  const bestKey = analysis.bestKey!;
  const worstKey = analysis.worstKey!;

  return {
    body: song.body,
    title: song.data.title,
    slug: song.slug,
    key: song.data.key,
    complexityScore: bestKey.score ? bestKey.score.toString().slice(0, 4) : 0,
    sumScore: bestKey.sumScore,
    worstKey,
    bestKey,
    allKeys: analysis.allKeys,
  };
}
const songs = props.songs.map(getSongStats);
---

<table>
  {
    songs.map((song: SongAnalysis) => {
      return (
        <tr>
          <td>
            <a href={"songs/" + song.slug}>{song.title}</a>
          </td>
          <td>{song.complexityScore}</td>
          <td>{song.key}</td>
          <td>{song.sumScore}</td>
          <td>{song.worstKey.sumScore}</td>
          <td>{song.worstKey.score}</td>
        </tr>
      );
    })
  }
</table>
